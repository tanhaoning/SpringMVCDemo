<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
      http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
      http://www.springframework.org/schema/context
      http://www.springframework.org/schema/context/spring-context.xsd
      http://www.springframework.org/schema/mvc
      http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd">

    <!-- 加载DispatcherServlet扫描包路径下的所有注解 -->
    <!--<context:component-scan base-package="com.test,com.spring"/>-->

    <!--对门户层所有包进行注解拦截，不使用默认扫描策略(@Component,@Controller,@Service,@Repository)，只扫描Controller-->
    <context:component-scan base-package="com.test" use-default-filters="false">
        <context:include-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
    </context:component-scan>

    <mvc:annotation-driven/>

    <!--<mvc:view-controller path="/" view-name="redirect:/test/login"/>-->

    <!-- JSP视图解析器 -->
    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="prefix" value="/"/>
        <property name="suffix" value=".jsp"/>
        <property name="order" value="2"/>
        <property name="viewClass"
                  value="org.springframework.web.servlet.view.JstlView"/>
    </bean>

    <!--配置freemarker视图重点配置 视图顺序为 1  -->
    <bean id="freemarkerResolver"
          class="org.springframework.web.servlet.view.freemarker.FreeMarkerViewResolver">
        <property name="cache" value="true"/>
        <property name="order" value="1"/>
        <property name="prefix" value=""/>
        <!--前缀 -->
        <property name="suffix" value=".html"/>
        <!--后缀 -->
        <property name="contentType" value="text/html;charset=UTF-8"/>
        <!--编码 -->
        <property name="viewClass">
            <value>org.springframework.web.servlet.view.freemarker.FreeMarkerView</value>
        </property>
        <!--
            上下文，这里配置之后，ftl文件中可以使用${rc.getContextPath()} 来获取文件上下文，
            类似jsp的request.getContextPath()
        -->
        <property name="requestContextAttribute" value="request"></property>
        <!--
            如果freemarker自定义函数的话：有个属性 attributesMap这个属性，里面支持方一个map，
            key-value的方式来定义你的自定义函数。 类要实现freemarker提供的接口。
        -->
        <property name="exposeRequestAttributes" value="true"/>
        <property name="exposeSessionAttributes" value="true"/>
        <!-- 允许使用宏 -->
        <property name="exposeSpringMacroHelpers" value="true"/>
    </bean>
    <!-- 这里定义freemarker.properties文件的加载，和后面的对应。 -->
    <bean id="freemarkerConfiguration"
          class="org.springframework.beans.factory.config.PropertiesFactoryBean">
        <property name="location"
                  value="classpath:/properties/freemarker.properties"/>
    </bean>
    <bean id="freemarkerConfig"
          class="org.springframework.web.servlet.view.freemarker.FreeMarkerConfigurer">
        <property name="defaultEncoding" value="UTF-8"/>
        <property name="templateLoaderPaths">
            <list>
                <!-- 页面文件路径 -->
                <value>/WEB-INF/views/html/</value>
                <!--<value>/WEB-INF/views/decorators/</value>-->
                <!-- 自定义宏，函数模板路径  -->
                <value>/WEB-INF/views/ftl_template/</value>
            </list>
        </property>
        <!-- 模板加载路径 -->
        <property name="freemarkerSettings" ref="freemarkerConfiguration"/>
        <!--<property name="freemarkerVariables">
            <map>
                <entry key="block" value-ref="blockDirective"/>
                <entry key="extends" value-ref="extendsDirective"/>
                <entry key="override" value-ref="overrideDirective"/>
                <entry key="super" value-ref="superDirective"/>
                <entry key="datetime" value-ref="dateTimeMethod"/>
                <entry key="subStr" value-ref="SubStrMethod"/>
            </map>
        </property>-->
    </bean>

    <!-- 支持上传文件 -->
    <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <!-- 设置上传文件的最大尺寸为1MB -->
        <property name="maxUploadSize">
            <value>1048576</value>
        </property>
        <property name="defaultEncoding">
            <value>UTF-8</value>
        </property>
    </bean>

    <!--spring 支持国际化,必须放在context里-->
    <bean id="messageSource"
          class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
        <property name="basenames">
            <list>
                <value>classpath:/i18n/messages</value>
            </list>
        </property>
        <!--① 刷新资源文件的周期，以秒为单位-->
        <!--<property name="cacheSeconds" value="5"/>-->
        <!--中文情况： JDK1.6时加默认编码才有效，1.5时会直接输出UNICODE字符<property name="defaultEncoding" value="UTF-8" />-->
    </bean>

    <import resource="springmvctest_controlls.xml"/>
</beans>